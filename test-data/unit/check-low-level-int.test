[case testLowLevelIntBasics]
from mypy_extensions import i32, i64

def f(x: int) -> i32:
    return i32(x)

reveal_type(i32(1) + i32(2))  # N: Revealed type is "mypy_extensions.i32"
i32(1) + i64(2)  # E: Unsupported operand types for + ("i32" and "i64")
[builtins fixtures/dict.pyi]

[case testLowLevelIntCoercions]
from mypy_extensions import i32, i64

a: i32 = 1
b: i64 = 2
c: i64 = a  # E: Incompatible types in assignment (expression has type "i32", variable has type "i64")
d: i64 = i64(a)
e: i32 = b  # E: Incompatible types in assignment (expression has type "i64", variable has type "i32")
f: i32 = i32(b)
[builtins fixtures/dict.pyi]
